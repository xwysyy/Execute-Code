# 问题描述

给定 \(N\)、\(V\)、长度为 \(N\) 的数组 \(v\) 表示物品体积，以及数组 \(w\) 表示物品价值：  
有 \(N\) 件物品和一个容量为 \(V\) 的背包。每件物品只能使用一次。  
第 \(i\) 件物品的体积是 \(v[i]\)，价值是 \(w[i]\)。  

求解将哪些物品装入背包，可以使这些物品的**总体积不超过背包容量**，且**总价值最大**。返回最大总价值。

solution的主函数为：  
`int solve(int &N, int &V, vector<int> &v, vector<int> &w)`  
其中：  
- `N` 是物品的数量，  
- `V` 是背包的容量，  
- `v` 是物品体积的数组，  
- `w` 是物品价值的数组。  

# 示例 1  
输入：  
```
N = 3  
V = 4  
v = [4, 3, 1]  
w = [1, 2, 1]  
```  
输出：  
```
2
```

解释：  
可以装入背包的物品最大总价值为 2。一种最优选择是：  
- 选择体积为 \(v[2] = 3\)，价值为 \(w[2] = 2\) 的物品。  

# 约束条件  
- \(0 < N, V, v[i], w[i] \leq @data\)  
- 时间限制：@time_limit ms  
- 内存限制：@space_limit KB  