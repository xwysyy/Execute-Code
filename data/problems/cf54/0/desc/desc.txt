# Problem Statement
After a trip with Sakurako, Kousuke was very scared because he forgot about his programming assignment. In this assignment, the teacher gave him an array $a$ of $n$ integers and asked him to calculate the number of **non-overlapping** segments of the array $a$, such that each segment is considered beautiful.

A segment $[l,r]$ is considered beautiful if $a_l + a_{l+1} + \dots + a_{r-1} + a_r=0$.

For a fixed array $a$, your task is to compute the maximum number of non-overlapping beautiful segments.

The main function of the solution is defined as:  
```cpp
class Solution {
public:
    int solve(int &n, vector<int> &a) {   
        // write your code here
    }
};
```
where:  
- the return value is the maximum value of the same number at the end

# Example 1:  
- Input:  
n = 5
a = [2, 1, -3, 2, 1]
- Output:  
1

# Constraints:  
- $1 \leq n \leq 1000000$
- $-10^4 \leq a[i] \leq 10^4$
- Time limit: 1000 ms  
- Memory limit: 6400 KB  