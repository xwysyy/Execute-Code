# Problem Statement
Even in university, students need to relax. That is why Sakurakos teacher decided to go on a field trip. It is known that all of the students will be walking in one line. The student with index $i$ has some topic of interest which is described as $a_i$. As a teacher, you want to minimise the disturbance of the line of students.

The disturbance of the line is defined as the number of neighbouring people with the same topic of interest. In other words, disturbance is the number of indices $j$ ($1 \le j < n$) such that $a_j = a_{j + 1}$.

In order to do this, you can choose index $i$ ($1\le i\le n$) and swap students at positions $i$ and $n-i+1$. You can perform any number of swaps.

Your task is to determine the minimal amount of disturbance that you can achieve by doing the operation described above any number of times.

The main function of the solution is defined as:  
```cpp
class Solution {
public:
    int solve(int &n, vector<int> &a) {   
        // write your code here
    }
};
```
where:  
- the return value is the minimal amount of disturbance that you can achieve by doing the operation described above any number of times

# Example 1:  
- Input:  
n = 5
a = [1, 1, 1, 2, 3]
- Output:  
1

# Constraints:  
- $2 \leq n \leq 1000000$
- $1 \leq a[i] \leq n$ 
- Time limit: 1000 ms  
- Memory limit: 6400 KB  