# 题面
给你 $n$ 个整数 $a_1, a_2, \ldots, a_n$ 。处理两种类型的 $q$ 查询：

- 形式为 "0 $x_j$ " 的查询：将数值 $x_j$ 添加到数组 $a$ 的所有偶数元素中、
- 形式为 "1 $x_j$ "的查询：在数组 $a$ 的所有奇数元素中添加数值 $x_j$ 。

请注意，在处理查询时，我们特别关注的是 $a_i$ 的奇数/偶数值，而不是其索引。

处理完每个查询后，打印数组 $a$ 中元素的总和。

solution的主函数如下：  
```cpp
vector<long long> solve(int &n, int &q, vector<int> &a, vector<pair<int, int>> &queries) {
    // write your code here
}
```
其中：  
- `n` 表示数组 $a$ 的长度。
- `q` 表示查询的数量。
- `a` 是一个整数数组
- `queries` 是一个二元组数组，每个元素表示查询的类型和值。
- 返回值为一个长整数数组，表示每个查询后数组 $a$ 中元素的总和。

# 示例 1  
- 输入：  
n = 1
q = 1
a = [1]
queries = [(1, 1)]
- 输出：  
[2]

# 约束条件  
- $1 \leq n, q \leq 100000$
- $1 \leq a[i] \leq 10^9$
- $1 \leq x_j \leq 10^4$
- 时间限制：1000 ms  
- 内存限制：3200 KB  