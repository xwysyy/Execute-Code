# 题面
罗斯塔姆忠心耿耿的坐骑拉赫什日渐衰弱。拉赫什曾经力大无穷、速度极快，但随着时间的推移，它变得越来越虚弱，甚至连移动都很费力。罗斯塔姆担心，如果拉赫什身体的许多部位同时失去力量，拉赫什可能会完全停止。为了让他的同伴继续活下去，罗斯塔姆决定一点一点地增强拉赫什的力量，让他身体的任何部位都不会虚弱太久。

把拉赫什的身体想象成一条由长度为 $n$ 的二进制字符串 $s$ 表示的斑点线，其中每个 $0$ 表示一个弱点，每个 $1$ 表示一个强点。罗斯塔姆的目标是确保 $m$ 个连续点中没有一个间隔是完全弱的（全部都是 $0$ 个）。

幸运的是，罗斯塔姆拥有一种名为 "提玛尔 "的特殊能力，这是他出生时从母亲鲁达贝那里继承来的。有了 Timar，他就可以选择长度为 $k$ 的任意语段，并立即将其全部强化（将该语段中的每个字符都变为 $1$ ）。挑战在于如何计算出罗斯塔姆需要使用 Timar 的最少次数，以保持拉赫什的移动，确保没有长度为 $m$ 的连续完全薄弱点。

solution的主函数如下：  
```cpp
class Solution {
public:
    int solve(int &n, int &m, int &k, string &s) {
        // write your code here
    }
};
```
其中：  
- 返回值为使用Timar的最少次数

# 示例 1：  
- 输入：  
n = 5, m = 1, k = 1
s = "10101"
- 输出：  
2

# 约束条件：  
- $1 \leq m, k \leq n \leq 1000000$
- 时间限制：1000 ms  
- 内存限制：6400 KB  