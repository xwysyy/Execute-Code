# Problem Statement
There are $n$ coins on the table forming a circle, and each coin is either facing up or facing down. Alice and Bob take turns to play the following game, and Alice goes first.

In each operation, the player chooses a facing-up coin, removes the coin, and flips the two coins that are adjacent to it. If (before the operation) there are only two coins left, then one will be removed and the other won't be flipped (as it would be flipped twice). If (before the operation) there is only one coin left, no coins will be flipped. If (before the operation) there are no facing-up coins, the player loses.

Decide who will win the game if they both play optimally. It can be proved that the game will end in a finite number of operations, and one of them will win.

The main function of the solution is defined as:  
```cpp
class Solution {
public:
    string solve(int &n, string &s) {
        // write your code here
    }
};
```
where:  
- `n`: the number of coins, `s`: the orientation of the coins, where `'U'` means facing up and `'D'` means facing down
- return: if Alice wins, return "YES", otherwise return "NO"

# Example 1:  
- Input:  
n = 5
s = "UUDUD"
- Output:  
YES

# Constraints:  
- $1 \leq n \leq 1000000$
- s[i] = 'U' or 'D'
- Time limit: 1000 ms  
- Memory limit: 64 KB  