# 题面
桌面上有 $n$ 枚硬币围成的圆圈，每枚硬币要么朝上，要么朝下。爱丽丝和鲍勃轮流玩下面的游戏，爱丽丝先玩。

在每次操作中，玩家选择一枚正面朝上的硬币，取出硬币并翻转与其相邻的两枚硬币。如果（操作前）只剩下两枚硬币，则取出一枚，另一枚不翻转（因为会翻转两次）。如果（操作前）只剩下一枚硬币，则不会翻转任何硬币。如果（操作前）没有正面朝上的硬币，玩家就输了。

如果两人都以最佳方式下棋，谁会赢呢？可以证明，游戏将在有限次的操作中结束，其中一人将获胜。

solution的主函数如下：  
```cpp
class Solution {
public:
    string solve(int &n, string &s) {
        // write your code here
    }
};
```
其中：  
- `n`：硬币的数量, `s`：硬币的朝向，其中`'U'`表示正面朝上，`'D'`表示正面朝下
- 返回值：如果爱丽丝赢，返回"YES"，否则返回"NO"

# 示例 1：  
- 输入：  
n = 5
s = "UUDUD"
- 输出：  
YES

# 约束条件：  
- $1 \leq n \leq 1000000$
- s[i] = 'U' 或 'D'
- 时间限制：1000 ms  
- 内存限制：6400 KB  