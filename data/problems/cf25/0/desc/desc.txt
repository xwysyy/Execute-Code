# Problem Statement
One winter morning, Rudolf was looking thoughtfully out the window, watching the falling snowflakes. He quickly noticed a certain symmetry in the configuration of the snowflakes. And like a true mathematician, Rudolf came up with a mathematical model of a snowflake.

He defined a snowflake as an undirected graph constructed according to the following rules:

-   Initially, the graph has only one vertex.
-   Then, more vertices are added to the graph. The initial vertex is connected by edges to $k$ new vertices ($k > 1$).
-   Each vertex that is connected to only one other vertex is connected by edges to $k$ more new vertices. This step should be done **at least once**.

After some mathematical research, Rudolf realized that such snowflakes may not have any number of vertices. Help Rudolf check if a snowflake with $n$ vertices can exist.

The main function of the solution is defined as:  
```cpp
class Solution {
public:
    string solve(int &n) {   
        // write your code here
    }
};
```
where:  
- return "YES" if a snowflake with $n$ vertices can exist, otherwise return "NO".

# Example 1:  
- Input:  
n = 15
- Output:  
"YES"

# Constraints:  
- $1 \leq n \leq 1000000$  
- Time limit: 1000 ms  
- Memory limit: 6400 KB  