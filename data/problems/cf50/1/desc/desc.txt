# Problem Statement
You are given an array $a_1, a_2, \ldots, a_n$ of positive integers.

You can color some elements of the array red, but there cannot be two adjacent red elements (i.e., for $1 \leq i \leq n-1$, at least one of $a_i$ and $a_{i+1}$ must not be red).

Your score is the maximum value of a red element plus the number of red elements. Find the maximum score you can get.

The main function of the solution is defined as:  
```cpp
class Solution {
public:
    int solve(int &n, vector<int> &a) {   
        // write your code here
    }
};
```
where:  
- the return value is the maximum score you can get

# Example 1:  
- Input:  
n = 3
a = [5, 4, 5]
- Output:  
7

# Constraints:  
- $1 \leq n \leq 1000000$
- $1 \leq a[i] \leq 10^9$ 
- Time limit: 1000 ms  
- Memory limit: 640 KB  