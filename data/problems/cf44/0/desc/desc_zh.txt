# 题面
又是无聊的一天，埃戈尔觉得无聊，决定做点什么。但因为没有朋友，他就想出了一个游戏。

埃戈尔有一副 $n$ 的扑克牌，最上面的 $i$ 张牌上写着数字 $a_i$ 。埃戈尔想玩一定轮数的游戏，直到牌用完为止。在每一轮中，他都会从牌面顶端抽取一张非零数的牌，然后结束这一轮。如果在这一轮中收集到的纸牌上的数字之和在 $l$ 和 $r$ 之间（包括 $l$ 和 $r$ ），则这一轮获胜；否则，这一轮失败。

埃戈尔对纸牌的顺序了如指掌。请帮助 Egor 确定他在这样的游戏中最多可以赢多少局。请注意，伊戈尔不需要连续赢几轮。

solution的主函数如下：  
```cpp
class Solution {
public:
    int solve(int &n, int &l, int &r, vector<int> &a) { 
        // write your code here
    }
};
```
其中：  
- 返回值为埃戈尔最多可以赢的局数

# 示例 1：  
- 输入：  
n = 5, l = 3, r = 10
a = [2, 1, 11, 3, 7]
- 输出：  
3

# 约束条件：  
- $1 \leq n \leq 100000$
- $1 \leq l \leq r \leq 10^9$
- $1 \leq a[i] \leq 10^9$ 
- 时间限制：1000 ms  
- 内存限制：6400 KB  