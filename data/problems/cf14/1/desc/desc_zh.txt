# 题面
给定一个由 $n$ 个元素组成的数组 $a$ ，求数组在执行下列操作 ** 次后的最大和：

- 选择 $2$ 个**相邻的**个元素，翻转它们的符号。换句话说，选择 $i$ 这样的索引 $1 \leq i \leq n - 1$ ，并赋值 $a_i = -a_i$ 和 $a_{i+1} = -a_{i+1}$ 。

solution的主函数如下：  
```cpp
class Solution {
public:
    long long solve(int &n, vector<int> &a) {   
        // write your code here
    }
};
```
其中：  
- `n` 表示数组的长度。
- `a` 是一个长度为 `n` 的数组。
- 函数应返回一个64位整数，表示数组在执行上述操作后的最大和。

# 示例 1  
- 输入：  
n = 3
a = [-1, -1, -1]
- 输出：  
1

# 约束条件  
- $2 \leq n \leq 100000$
- $-10^9 \leq a_i \leq 10^9$
- 时间限制：1000 ms  
- 内存限制：640 KB  