# 题面
瓦夏有两个爱好--给数组添加排列组合 $^{\dagger}$ 和寻找出现频率最高的元素。最近，他发现了一个数组 $a$ ，并决定找出在数组 $a$ 中添加一些排列组合后，数组 $a$ 中等于相同数字的元素的最大数目。

更具体地说，瓦夏必须准确地选择一个长度为 $n$ 的排列 $p_1, p_2, p_3, \ldots, p_n$ ，然后根据规则 $a_i := a_i + p_i$ 改变数组 $a$ 中的元素。之后，瓦夏计算每个数字在数组 $a$ 中出现的次数，并取其中的最大值。你需要确定他能得到的最大值。

$^{\dagger}$ 长度为 $n$ 的排列是由 $n$ 个不同的整数组成的数组，这些整数从 $1$ 到 $n$ 按任意顺序排列。例如， $[2,3,1,5,4]$ 是一个排列，但 $[1,2,2]$ 不是一个排列（ $2$ 在数组中出现了两次）， $[1,3,4]$ 也不是一个排列（ $n=3$ 但数组中有 $4$ ）。

solution的主函数如下：  
```cpp
class Solution {
public:
    int solve(int &n, vector<int> &a) {   
        // write your code here
    }
};
```
其中：  
- 返回值是能得到的最大值

# 示例 1：  
- 输入：  
n = 2
a = [1, 2]
- 输出：  
2

# 约束条件：  
- $1 \leq n \leq 100000$
- $1 \leq a[i] \leq 10^9$
- 时间限制：1000 ms  
- 内存限制：640 KB  