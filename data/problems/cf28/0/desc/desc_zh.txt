# 题面
给您两个长度相等的字符串 $a$ 和 $b$ ，其中只有字符 0 和/或 1；两个字符串都以字符 0 开始，以字符 1 结束。

您可以执行以下操作任意次数（可能为零）：

- 选择其中一个字符串和其中两个**相等**的字符，然后将它们之间的所有字符都变成这些字符。

从形式上看，您可以从这两个字符串中选择一个（假设所选字符串为 $s$ ），然后选择两个整数 $l$ 和 $r$ ，即 $1 \le l < r \le |s|$ 和 $s_l = s_r$ ，然后将 $s_i$ 中的每个字符 $l < i < r$ 替换为 $s_l$ 。

例如，如果选择的字符串是 010101，那么只需进行一次操作，就可以将其转换为以下字符串之一：
- 如果您选择 $l = 3$ 和 $r = 5$ ，则为 010001；
- 如果您选择 $l = 4$ 和 $r = 6$ ，则为 010111；

您必须确定是否有可能通过任意次数的运算使给定的字符串相等。

solution的主函数如下：  
```cpp
class Solution {
public:
    string solve(string &a, string &b) {   
        // write your code here
    }
};
```
其中：  
- 返回值:"YES"或"NO"

# 示例 1：  
- 输入：  
a = "01010001"
b = "01110101"
- 输出：  
YES  

# 约束条件：  
- $1 \leq a.length \leq 1000000$
- a.length == b.length 
- 时间限制：1000 ms  
- 内存限制：6400 KB  