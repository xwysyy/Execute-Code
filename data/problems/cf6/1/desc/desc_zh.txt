# 题面
给定一个由 $n$ 个正整数组成的数组 $a=[a_1,a_2,\dots,a_n]$ ，可以对其进行两种类型的运算：

1.  将 $1$ 添加到索引为**多**的每个**元素中。换句话说，对数组进行如下修改 $a_1 := a_1 +1, a_3 := a_3 + 1, a_5 := a_5+1, \dots$ .
    
2.  在每个索引为**偶**的元素上添加 $1$ 。换句话说，更改数组如下 $a_2 := a_2 +1, a_4 := a_4 + 1, a_6 := a_6+1, \dots$ .

确定经过任意次数的运算后，最终数组是否只包含偶数或奇数。换句话说，确定在任意次数的运算后，是否可以使数组的所有元素具有相同的奇偶性。

请注意，两种类型的操作都可以执行任意次数（甚至不执行）。不同类型的操作可以执行不同的次数。

solution的主函数如下：  
```cpp
class Solution {
public:
    string solve(int &n, vector<int> &a) {   
        // write your code here
    }
};
```
其中：  
- 返回值是一个字符串，如果可以使数组的所有元素具有相同的奇偶性，则返回`YES`，否则返回`NO`。

# 示例 1  
- 输入：  
n = 5
a = [1000, 1, 1000, 1, 1000]
- 输出：  
YES

# 约束条件  
- $2 \leq n \leq 100000$
- $1 \leq a[i] \leq 10^9$
- 时间限制：1000 ms  
- 内存限制：320 KB  