# Problem Statement
After receiving yet another integer array $a_1, a_2, \ldots, a_n$ at her birthday party, Index decides to perform some operations on it.

Formally, there are $m$ operations that she is going to perform in order. Each of them belongs to one of the two types:

-   $\texttt{1 l r}$. Given two integers $l$ and $r$, for all $1 \leq i \leq n$ such that $l \leq a_i \leq r$, set $a_i := a_i + 1$.
-   $\texttt{2 l r}$. Given two integers $l$ and $r$, for all $1 \leq i \leq n$ such that $l \leq a_i \leq r$, set $a_i := a_i - 1$.

For example, if the initial array $a = [7, 1, 3, 4, 3]$, after performing the operation $\texttt{+} \space 2 \space 4$, the array $a = [7, 1, 4, 5, 4]$. Then, after performing the operation $\texttt{-} \space 1 \space 10$, the array $a = [6, 0, 3, 4, 3]$.

Index is curious about the maximum value in the array $a$. Please help her find it after each of the $m$ operations.

The main function of the solution is defined as:  
```cpp
class Solution {
public:
    vector<int> solve(int &n, int &m, vector<int> &a, vector<array<int, 3>> &ops) {
        // write your code here
    }
};
```
where:  
- `ops` is the array of operations, each element is an array of length 3, representing an operation
- return an array, where the elements are the maximum value after each operation

# Example 1:  
- Input:  
n = 5, m = 5
a = [1, 2, 3, 2, 1]
ops = [[1, 1, 3], [2, 2, 3], [1, 1, 2], [1, 2, 4], [2, 6, 8]]
- Output:  
[4, 4, 4, 5, 5]

# Constraints:  
- $1 \leq n, m \leq 100000$
- $1 \leq a[i] \leq 10^9$ 
- $1 \leq l \leq r \leq 10^9$
- Time limit: 1000 ms  
- Memory limit: 6400 KB  