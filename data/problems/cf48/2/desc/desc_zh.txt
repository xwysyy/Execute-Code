# 题面
Index 在生日派对上又收到了一个整数数组 $a_1, a_2, \ldots, a_n$ ，她决定对其执行一些操作。

从形式上看，她要依次执行的操作有 $m$ 个。每个操作都属于两种类型之一：

- $\texttt{1 l r}$ .给定两个整数 $l$ 和 $r$ ，对于所有 $1 \leq i \leq n$ 中的 $l \leq a_i \leq r$ ，设 $a_i := a_i + 1$ .
- $\texttt{2 l r}$ .给定两个整数 $l$ 和 $r$ ，对于所有 $1 \leq i \leq n$ 中的 $l \leq a_i \leq r$ ，设 $a_i := a_i - 1$ .

例如，如果初始数组为 $a = [7, 1, 3, 4, 3]$ ，执行运算 $\texttt{+} \space 2 \space 4$ 后，数组为 $a = [7, 1, 4, 5, 4]$ 。然后，在执行操作 $\texttt{-} \space 1 \space 10$ 之后，数组 $a = [6, 0, 3, 4, 3]$ 。

Index 对数组 $a$ 中的最大值很好奇。请帮助她找到每次 $m$ 操作后的最大值。

solution的主函数如下：  
```cpp
class Solution {
public:
    vector<int> solve(int &n, int &m, vector<int> &a, vector<array<int, 3>> &ops) {
        // write your code here
    }
};
```
其中：  
- `ops` 是操作的数组，每个元素是一个长度为3的数组，表示一个操作
- 返回一个数组，数组中的元素是每次操作后的最大值

# 示例 1：  
- 输入：  
n = 5, m = 5
a = [1, 2, 3, 2, 1]
ops = [[1, 1, 3], [2, 2, 3], [1, 1, 2], [1, 2, 4], [2, 6, 8]]
- 输出：  
[4, 4, 4, 5, 5]

# 约束条件：  
- $1 \leq n, m \leq 100000$
- $1 \leq a[i] \leq 10^9$ 
- $1 \leq l \leq r \leq 10^9$
- 时间限制：1000 ms  
- 内存限制：640 KB  