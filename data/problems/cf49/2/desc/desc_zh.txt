# 题面
樱子非常喜欢交替字符串。如果偶数位置上的字符相同，奇数位置上的字符相同，并且字符串的长度是奇数，她就会把一个由小写拉丁字母组成的字符串 $s$ 称为交替字符串。

例如，字符串 "abab "和 "gg "是交替字符串，而字符串 "aba "和 "ggwp "则不是。

作为好朋友，您决定赠送这样的字符串，但您找不到。幸运的是，您可以对字符串进行两种操作：

1.  选择索引 $i$ 并删除字符串中的 $i$ -th 字符，这样字符串的长度就会减少 $1$ 。此类操作的**次数不超过 $1$ 次；
2.  选择索引 $i$ 并将 $s_i$ 替换为其他字母。

由于时间紧迫，您需要确定使字符串成为交替字符串所需的最少操作次数。

solution的主函数如下：  
```cpp
class Solution {
public:
    int solve(int &n, string &s) {
        // write your code here
    }
};
```
其中：  
- `n`：字符串的长度, `s`:由小写拉丁字母组成的字符串
- 返回值：使字符串成为交替字符串所需的最少操作次数

# 示例 1：  
- 输入：  
n = 2
s = "ca"
- 输出：  
0

# 约束条件：  
- $1 \leq n \leq 100000$
- 时间限制：1000 ms  
- 内存限制：64 KB  