# Problem Statement:
YunQian is standing on an infinite plane with the Cartesian coordinate system on it. In one move, she can move to the diagonally adjacent point on the top right or the adjacent point on the left.

That is, if she is standing on point $(x,y)$, she can either move to point $(x+1,y+1)$ or point $(x-1,y)$.

YunQian initially stands at point $(a,b)$ and wants to move to point $(c,d)$. Find the minimum number of moves she needs to make or declare that it is impossible.

The main function of the solution is defined as: 
```cpp
class Solution {
public:
    int solve(int &a, int &b, int &c, int &d) {
        // write your code here
    }
};
```

Where:  
- `a, b, c, d`: integers representing the coordinates of Yunqian's initial position and target position.  
- return value: the minimum number of moves Yunqian needs to make to reach the target position. If it is impossible to reach the target position, return -1.

# Example 1:
- Input:  
a = -1, b = 0, c = -1, d = 2
- Output:  
4

# Constraints:
- $-100000 \leq a, b, c, d \leq 100000$  
- Time limit: 1000 ms  
- Memory limit: 64 KB  