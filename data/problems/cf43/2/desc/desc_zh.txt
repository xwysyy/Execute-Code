# 题面
摩卡喜欢数组，所以在出发前，查莫送给她一个由 $n$ 个正整数组成的数组 $a$ 作为礼物。

摩卡不喜欢包含不同数字的数组，所以摩卡决定用魔法来改变数组。摩卡可以执行下面的三步操作若干次（可能是零次）：

1.  选择索引 $l$ 和 $r$ ( $1 \leq l < r \leq n$ )
2.  让 $x$ 成为子数组 $[a_l, a_{l+1},\ldots, a_r]$ 的中值 $^\dagger$ 3.
3.  设置所有值 $a_l, a_{l+1},\ldots, a_r$ 至 $x$ 3.

假设初始值为 $a=[1,2,3,4,5]$ ：

- 如果 Mocha 在第一次操作中选择了 $(l,r)=(3,4)$ ，那么 $x=3$ ，数组将变为 $a=[1,2,3,3,5]$ 。
- 如果 Mocha 在第一次操作中选择了 $(l,r)=(1,3)$ ，那么 $x=2$ ，数组将变为 $a=[2,2,2,4,5]$ 。

Mocha 会一直执行操作，直到数组只包含相同的数字。Mocha 想知道这个数字的最大可能值是多少。

$^\dagger$ 在长度为 $m$ 的数组 $b$ 中，中位数是按非递减顺序对元素排序后占据位置编号 $\lfloor \frac{m+1}{2} \rfloor$ 的元素。例如， $[3,1,4,1,5]$ 的中位数是 $3$ ， $[5,25,20,24]$ 的中位数是 $20$ 。

solution的主函数如下：  
```cpp
class Solution {
public:
    int solve(int &n, vector<int> &a) {   
        // write your code here
    }
};
```
其中：  
- 返回值为最后相同数字的最大值

# 示例 1：  
- 输入：  
n = 5
a = [1, 2, 3, 4, 5]
- 输出：  
4

# 约束条件：  
- $2 \leq n \leq 1000000$
- $1 \leq a[i] \leq 10^9$ 
- 时间限制：1000 ms  
- 内存限制：64 KB  