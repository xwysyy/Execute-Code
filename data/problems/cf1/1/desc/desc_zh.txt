# 题面
波利卡普有 $n$ 枚硬币，其中 $i$ 枚硬币的价值是 $a_i$ 。波利卡普想把所有的硬币都分到自己的口袋里，但是他不能把两个价值相同的硬币放进同一个口袋里。

例如，如果波利卡普有六枚硬币，用数组 $a = [1, 2, 4, 3, 3, 2]$ 表示，那么他可以将硬币按如下方式分配到两个口袋中： $[1, 2, 3], [2, 3, 4]$ .

波利卡普希望用最少的口袋来分配所有硬币。请帮助他做到这一点。

solution的主函数如下：  
```cpp
class Solution {
public:
    int solve(int &n, vector<int> &a) {   
        // write your code here
    }
};
```
其中：  
- `n` 是硬币的数量  
- `a` 是硬币的价值数组  
- 返回值是最少口袋数量

# 示例 1：  
- 输入：  
n = 6  
a = [1, 2, 4, 3, 3, 2]
* 输出：  
2

# 约束条件：  
- $1 \leq n \leq 100000$
- $1 \leq a[i] \leq 10^9$
- 时间限制：1000 ms  
- 内存限制：640 KB  