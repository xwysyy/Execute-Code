# 题面
在伯兰，一辆公共汽车由一排从 $1$ 到 $n$ 的 $n$ 个座位组成。乘客上车时请务必遵守这些规则：

- 如果车上没有空座位，乘客可以坐在任何空座位上；
- 否则，乘客应坐在至少有一个邻座空闲的座位上。换句话说，只有当 $i-1$ 或 $i+1$ 中至少有一个座位有人时，乘客才能坐在索引为 $i$ （ $1 \le i \le n$ ）的座位上。

今天有 $n$ 位乘客上车。数组 $a$ 按时间顺序记录了他们的座位号。也就是说， $a_1$ 包含了第一位乘客的座位号， $a_2$ - 第二位乘客的座位号，以此类推。

您知道数组 $a$ 的内容。确定是否所有乘客都遵循了建议。

例如，如果 $n = 5$ 和 $a$ =\[ $5, 4, 2, 1, 3$ \]，那么建议就没有被遵守，因为 $3$ -rd乘客坐在了座位号 $2$ ，而邻近的座位号 $1$ 和 $3$ 是空闲的。

solution的主函数如下：  
```cpp
class Solution {
public:
    string solve(int &n, vector<int> &a) {   
        // write your code here
    }
};
```
其中：  
- 如果所有乘客都遵循了建议，返回 "YES"，否则返回 "NO"

# 示例 1：  
- 输入：  
n = 5
a = [5, 4, 2, 1, 3]
- 输出：  
NO

# 约束条件：  
- $1 \leq n \leq 1000000$
- $1 \leq a[i] \leq n$
- 所有座位号都是唯一的
- 时间限制：1000 ms  
- 内存限制：6400 KB  